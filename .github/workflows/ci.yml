name: CI

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Lint with flake8
        run: |
          flake8 yaegi --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 yaegi --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

      - name: Check code formatting with black
        run: |
          black --check yaegi

      - name: Type check with mypy
        run: |
          mypy yaegi

      - name: Test with pytest
        run: |
          pytest --cov=yaegi --cov-report=xml

      - name: Run example scripts
        run: |
          python -m examples.basic_usage

      - name: Test CLI commands
        run: |
          yaegi kundali --birth "1990-05-15 14:30" --lat 28.6139 --lon 77.2090
          yaegi panchang --date "2024-01-15" --lat 28.6139 --lon 77.2090

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: |
          python -m build

      - name: Check package
        run: |
          twine check dist/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

  publish:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    needs: [test, build]
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
